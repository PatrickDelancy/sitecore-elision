<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <factories>
      <factory id="ElisionObjectFactory" type="Elision.Ioc.ElisionObjectFactory, Elision.Ioc"></factory>
    </factories>
    
    <pipelines>
      
      <getRenderingDatasource>
        <processor ref="Elision.ExperienceEditor.Pipelines.GetRenderingDatasource.RunGetDatasourceLocationRules, Elision.ExperienceEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:after="processor[@type='Sitecore.Pipelines.GetRenderingDatasource.GetDatasourceLocation, Sitecore.Kernel']"/>
        <processor type="Elision.ExperienceEditor.Pipelines.GetRenderingDatasource.AddDerivedTemplatesForSelection, Elision.ExperienceEditor"
                   patch:after="processor[@type='Sitecore.Pipelines.GetRenderingDatasource.GetTemplatesForSelection, Sitecore.Kernel']"/>
      </getRenderingDatasource>

      <getPlaceholderRenderings>
        <processor ref="Elision.ExperienceEditor.Pipelines.GetPlaceholderRenderings.RunPlaceholderSettingsRules, Elision.ExperienceEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:before="processor[@type='Sitecore.Pipelines.GetPlaceholderRenderings.RemoveNonEditableRenderings, Sitecore.Kernel']" />
      </getPlaceholderRenderings>

      <getLookupSourceItems>
        <processor ref="Elision.ContentEditor.Pipelines.GetLookupSourceItems.FixQueryRootForRenderingParameterTemplates, Elision.ContentEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:before="processor[1]" />
        <processor ref="Elision.ContentEditor.Pipelines.GetLookupSourceItems.RunGetLookupSourceItemsRules, Elision.ContentEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:before="processor[2]" />
        <processor ref="Elision.ContentEditor.Pipelines.GetLookupSourceItems.ReplaceLookupSourceQueryTokens, Elision.ContentEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:before="processor[3]" />
      </getLookupSourceItems>
      
      <mvc.getPageRendering>
        <!-- Enables configuring browser caching in MVC. Was only working in WebForms. -->
        <processor type="Elision.Web.Caching.SetBrowserCachingRenderingProcessor, Elision.Web" />
      </mvc.getPageRendering>

      <getCanonicalUrl>
        <processor type="Elision.Web.Pipelines.GetCanonicalUrl.GetCanonicalUrlForItem, Elision.Web" />
        <processor type="Elision.Web.Pipelines.GetCanonicalUrl.GetCanonicalUrlForAlias, Elision.Web" />
        <processor type="Elision.Web.Pipelines.GetCanonicalUrl.GetLowercaseCanonical, Elision.Web" />
      </getCanonicalUrl>

      <getFieldReplacementTokens>
          <processor type="Elision.ContentEditor.Pipelines.GetFieldReplacementTokens.GetTokens, Elision.ContentEditor" />
      </getFieldReplacementTokens>

      <executePageEditorAction>
        <processor ref="Elision.ExperienceEditor.Pipelines.ExecutePageEditorAction.ReplaceRendering, Elision.ExperienceEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:instead="*[@type='Sitecore.Pipelines.ExecutePageEditorAction.ReplaceRendering, Sitecore.ExperienceEditor']" />
        <processor ref="Elision.ExperienceEditor.Pipelines.ExecutePageEditorAction.InsertRendering, Elision.ExperienceEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:instead="*[@type='Sitecore.Pipelines.ExecutePageEditorAction.InsertRendering, Sitecore.ExperienceEditor']"/>
      </executePageEditorAction>
      
      <getChromeData>
        <processor ref="Elision.ExperienceEditor.Pipelines.GetChromeData.RunCompatibleRenderingRules, Elision.ExperienceEditor"
                   factory="ElisionObjectFactory" type="1"
                   patch:before="processor[@type='Sitecore.Pipelines.GetChromeData.GetEditFrameChromeData, Sitecore.Kernel']"/>
      </getChromeData>

      <getContentEditorFields>
        <processor type="Elision.ContentEditor.Pipelines.GetContentEditorFields.ApplyFieldVisibility, Elision.ContentEditor"
                   patch:instead="processor[@type='Sitecore.Shell.Applications.ContentEditor.Pipelines.GetContentEditorFields.GetFields, Sitecore.Client']" />
      </getContentEditorFields>

      <renderField>
        <processor type="Elision.ContentEditor.Pipelines.RenderField.GetResponsiveImageFieldValue, Elision.ContentEditor"
                   patch:instead="processor[@type='Sitecore.Pipelines.RenderField.GetImageFieldValue, Sitecore.Kernel']"/>
        <processor type="Elision.ContentEditor.Pipelines.RenderField.ReplaceTokens, Elision.ContentEditor"
                   patch:after="processor[@type='Sitecore.Pipelines.RenderField.AddBeforeAndAfterValues, Sitecore.Kernel']"/>
      </renderField>
      
      <contentSearch.getContextIndex>
        <processor ref="Elision.Search.Pipelines.GetContextIndex.RunGetContextIndexRules, Elision.Search"
                   factory="ElisionObjectFactory" type="1"
                   patch:before="*[1]"/>
      </contentSearch.getContextIndex>
    
    </pipelines>
    <settings>
      <!-- 
          DEG.Components.LocalDatasourceFolderQuery
                This sitecore query is used to select the datasource folder that contains all of the
                local components for an item in the content tree. This is relative to the page itself.
                Default value: ./_degcomponents
      -->
      <setting name="Elision.LocalDatasourceFolderQuery" value="./_components" />
      <!-- 
          DEG.Components.LocalDatasourceFolderTemplateID
                This is the ID of the template used to create new local datasource folders in the content tree.
                Default value: {122AE27A-D84F-4C5E-8367-0F42C764976E}
      -->
      <setting name="Elision.LocalDatasourceFolderTemplateID" value="{122AE27A-D84F-4C5E-8367-0F42C764976E}" />
      <!-- 
          DEG.Components.LocalDatasourceFolderNesting
                How to nest local datasource folders. When enabled, this will dynamically create subfolders
                Default value: True
      -->
      <setting name="Elision.LocalDatasourceFolderNesting" value="True" />
      <!-- 
          DEG.Components.WebsiteDatasourceFolderQuery
                This sitecore query is used to select the datasource folder that contains all of the
                shared components for a website in the content tree. This is relative to the current Website folder.
                Default value: ./DegComponents
      -->
      <setting name="Elision.WebsiteDatasourceFolderQuery" value="./_components" />
      <!-- 
          DEG.Components.WebsiteDatasourceFolderTemplateID
                This is the ID of the template used to create new website shared datasource folders in the content tree.
                Default value: {122AE27A-D84F-4C5E-8367-0F42C764976E}
      -->
      <setting name="Elision.WebsiteDatasourceFolderTemplateID" value="{122AE27A-D84F-4C5E-8367-0F42C764976E}" />
      <!-- 
          DEG.Components.WebsiteDatasourceFolderNesting
                How to nest website datasource folders. When enabled, this will dynamically create subfolders using the
                "Datasource template"'s name
                Default value: True
      -->
      <setting name="Elision.WebsiteDatasourceFolderNesting" value="True" />
      <!-- 
          DEG.Components.GlobalDatasourceFolderQuery
                This sitecore query is used to select the datasource folder that contains all of the
                global components for an item in the content tree. This is relative to the Sitecore content root (/sitecore/content).
                Default value: ./GlobalComponents
      -->
      <setting name="Elision.GlobalDatasourceFolderQuery" value="./_components" />
      <!-- 
          DEG.Components.GlobalDatasourceFolderTemplateID
                This is the ID of the template used to create new global datasource folders in the content tree.
                Default value: {122AE27A-D84F-4C5E-8367-0F42C764976E}
      -->
      <setting name="Elision.GlobalDatasourceFolderTemplateID" value="{122AE27A-D84F-4C5E-8367-0F42C764976E}" />
      <!-- 
          DEG.Components.GlobalDatasourceFolderNesting
                How to nest global datasource folders. When enabled, this will dynamically create subfolders
                Default value: True
      -->
      <setting name="Elision.GlobalDatasourceFolderNesting" value="True" />
    </settings>
  </sitecore>
</configuration>
